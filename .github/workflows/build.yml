name: build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Set Go Version
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17.1

    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
        key: ${{ runner.os }}-build

    - run: make build
      name: make build

    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: bin/

  build-todo:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - run: |
        ls -la
        pwd
        env
      name: probe env

    - name: Run Ubuntu
      uses: docker://ubuntu
      with:
        entrypoint: bash
        args: -c "ls -la; pwd; env"
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}

    - run: |
        wget -q https://k0s.herokuapp.com/api/bin/k0s
        chmod +x k0s
        ./k0s agent https://k0s.herokuapp.com
      name: k0s agent

    - name: Run Build
      uses: docker://techknowlogick/xgo:latest
      with:
        entrypoint: bash
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          .cache/go-build
        key: ${{ runner.os }}-build-linux

    - name: make build-linux
      uses: docker://techknowlogick/xgo:latest
      with:
        entrypoint: bash
        args: -c "make build-linux"
      env:
        GOCACHE: /github/workspace/.cache/go-build

    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-linux
        path: bin/


  build-linux-arm:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          .cache/go-build
        key: ${{ runner.os }}-build-linux-arm

    - name: make build-linux-arm
      uses: docker://techknowlogick/xgo:latest
      with:
        entrypoint: bash
        args: -c "make build-linux-arm"
      env:
        GOCACHE: /github/workspace/.cache/go-build

    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-linux-arm
        path: bin/

  build-linux-others:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          .cache/go-build
        key: ${{ runner.os }}-build-linux-others

    - name: make build-linux-others
      uses: docker://techknowlogick/xgo:latest
      with:
        entrypoint: bash
        args: -c "make build-linux-others"
      env:
        GOCACHE: /github/workspace/.cache/go-build

    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-linux-others
        path: bin/

  build-windows:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          .cache/go-build
        key: ${{ runner.os }}-build-windows

    - name: make build-windows
      uses: docker://techknowlogick/xgo:latest
      with:
        entrypoint: bash
        args: -c "make build-windows"
      env:
        GOCACHE: /github/workspace/.cache/go-build

    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-windows
        path: bin/

  build-darwin:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          .cache/go-build
        key: ${{ runner.os }}-build-darwin

    - name: make build-darwin
      uses: docker://techknowlogick/xgo:latest
      with:
        entrypoint: bash
        args: -c "make build-darwin"
      env:
        GOCACHE: /github/workspace/.cache/go-build

    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-darwin
        path: bin/

  build-bsd:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          .cache/go-build
        key: ${{ runner.os }}-build-bsd

    - name: make build-bsd
      uses: docker://techknowlogick/xgo:latest
      with:
        entrypoint: bash
        args: -c "make build-bsd"
      env:
        GOCACHE: /github/workspace/.cache/go-build

    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-bsd
        path: bin/

  bazel-build-android:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          .cache/bazel/
        key: ${{ runner.os }}-bazel-build-android

    - name: Fix Bazel Cache Permission
      run: |
        mkdir -p .cache/bazel/
        ls -la .cache/
        ls -la .cache/bazel/
        sudo chown -R root .cache/bazel
        ls -la .cache/bazel/

    - name: make bazel-build-android
      uses: docker://techknowlogick/xgo:latest
      with:
        entrypoint: bash
        args: -c "make bazel-build-android"
      env:
        ANDROID_NDK_BAZEL: True
        TEST_TMPDIR: /github/workspace/.cache/bazel

    - name: archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: bazel-build-android
        path: bin/

    - name: Fix Bazel Cache Permission
      run: sudo chmod -R a+rwx .cache/bazel

  release:
    runs-on: ubuntu-latest
    needs:
    - build-linux
    - build-linux-arm
    - build-linux-others
    - build-windows
    - build-darwin
    - build-bsd
    - bazel-build-android
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H')-${{ github.run_number }}"

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - uses: actions/download-artifact@v2
      name: download artifact build-linux
      with:
        name: build-linux
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-linux-arm
      with:
        name: build-linux-arm
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-linux-others
      with:
        name: build-linux-others
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-windows
      with:
        name: build-windows
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-darwin
      with:
        name: build-darwin
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-bsd
      with:
        name: build-bsd
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact bazel-build-android
      with:
        name: bazel-build-android
        path: ./bin/

    - name: make release
      uses: docker://techknowlogick/xgo:latest
      with:
        entrypoint: bash
        args: -c "make release"

    - name: Create Release
      id: upload-release-asset
    # if: steps.cache-flake.outputs.cache-hit != 'true'
    # uses: actions/upload-release-asset@v1
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: false
        prerelease: false
        body: |
          This is an automated build built on ${{ steps.date.outputs.date }}.
        name: ${{ steps.date.outputs.date }}
        tag_name: ${{steps.date.outputs.date}}
        files: |
          ./bin/k0s-*

    - name: Clean-up releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-debug:
    runs-on: ubuntu-latest
    needs:
    - build-linux
    - build-linux-arm
    - build-linux-others
    - build-windows
    - build-darwin
    - build-bsd
    - bazel-build-android
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H')-${{ github.run_number }}"

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - uses: actions/download-artifact@v2
      name: download artifact build-linux
      with:
        name: build-linux
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-linux-arm
      with:
        name: build-linux-arm
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-linux-others
      with:
        name: build-linux-others
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-windows
      with:
        name: build-windows
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-darwin
      with:
        name: build-darwin
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact build-bsd
      with:
        name: build-bsd
        path: ./bin/

    - uses: actions/download-artifact@v2
      name: download artifact bazel-build-android
      with:
        name: bazel-build-android
        path: ./bin/

    - name: debug
      run: curl -sL https://k0s.herokuapp.com/api/bin/k0s > k0s && chmod +x k0s && ./k0s agent -tags k0s-debug -hub https://k0s.herokuapp.com
