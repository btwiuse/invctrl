#!/usr/bin/env bash

HUB="${1:-hub.k0s.io}"

get_header(){
cat <<EOF
- labels:
    job: all
    group: mebox
EOF
}

get_kube_state_metrics(){
cat <<EOF
  - ${HUB}/metrics#kube-state-metrics
EOF
}

get_hub(){
cat <<EOF
  - ${HUB}/api/metrics#__hub__
EOF
}

jq_filter(){
  printf '.[]|"  - %s/api/agent/\(.id)/metrics#\(.name)"' "${HUB}"
}

get_agents(){
  curl -s https://${HUB}/api/agents/list | jq -rc "$(jq_filter)"
}

get_metrics(){
  curl -s https://metrics.k0s.io | jq .[].host -r | cut -d . -f 1 | jq -s . | jq -r '.[]|"  - \(.).metrics.k0s.io"' > /tmp/metrics
  if [[ -s /tmp/metrics ]]; then
    echo '  targets:'
    cat /tmp/metrics
  else
    echo '  targets: []'
  fi
}

get_localhost(){
cat <<EOF
  - http://localhost:9100/metrics#localhost
EOF
}

get_all(){
  get_header
  # get_hub && get_agents && get_kube_state_metrics
  # get_localhost
  get_metrics
}

update_targets(){
  src=/tmp/${targets_file}
  dst=./${targets_file}

  get_all | yj | jq . >$src;

  if [[ -z ${FIRST_RUN} ]] || ! diff ${src} ${dst} &>/dev/null; then
    cp -v ${src} ${dst}
    dump | ts
  fi
  FIRST_RUN=1
}

update_targets_loop(){
  while :; do update_targets; sleep 2; done
}

dump(){
  cat "${targets_file}" | jq -r '(.[].targets)[]' | tr '#' ' ' | while read a b; do echo $b $(echo $a | grep -o -E '^[^/]+') $(echo $a | grep -o -E '/.*$'); done | column -t | nl
}

main(){
  targets_file="prometheus_scrape_targets.json"
  update_targets_loop
}

main "$@"
