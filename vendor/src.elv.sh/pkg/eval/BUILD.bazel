load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "args_walker.go",
        "builtin_fn_cmd.go",
        "builtin_fn_cmd_unix.go",
        "builtin_fn_cmd_windows.go",
        "builtin_fn_container.go",
        "builtin_fn_debug.go",
        "builtin_fn_env.go",
        "builtin_fn_flow.go",
        "builtin_fn_fs.go",
        "builtin_fn_io.go",
        "builtin_fn_misc.go",
        "builtin_fn_num.go",
        "builtin_fn_pred.go",
        "builtin_fn_str.go",
        "builtin_fn_styled.go",
        "builtin_ns.go",
        "builtin_special.go",
        "callable.go",
        "closure.go",
        "compile_effect.go",
        "compile_lvalue.go",
        "compile_value.go",
        "compiler.go",
        "deprecation.go",
        "eval.go",
        "exception.go",
        "external_cmd.go",
        "frame.go",
        "glob.go",
        "go_fn.go",
        "interrupts.go",
        "must.go",
        "ns.go",
        "options.go",
        "port.go",
        "process_unix.go",
        "process_windows.go",
        "purely_eval.go",
        "pwd.go",
        "var_parse.go",
        "var_ref.go",
    ],
    importmap = "k0s.io/vendor/src.elv.sh/pkg/eval",
    importpath = "src.elv.sh/pkg/eval",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/xiaq/persistent/hash:go_default_library",
        "//vendor/github.com/xiaq/persistent/hashmap:go_default_library",
        "//vendor/github.com/xiaq/persistent/vector:go_default_library",
        "//vendor/src.elv.sh/pkg/daemon:go_default_library",
        "//vendor/src.elv.sh/pkg/diag:go_default_library",
        "//vendor/src.elv.sh/pkg/env:go_default_library",
        "//vendor/src.elv.sh/pkg/eval/errs:go_default_library",
        "//vendor/src.elv.sh/pkg/eval/mods/bundled:go_default_library",
        "//vendor/src.elv.sh/pkg/eval/vals:go_default_library",
        "//vendor/src.elv.sh/pkg/eval/vars:go_default_library",
        "//vendor/src.elv.sh/pkg/fsutil:go_default_library",
        "//vendor/src.elv.sh/pkg/glob:go_default_library",
        "//vendor/src.elv.sh/pkg/logutil:go_default_library",
        "//vendor/src.elv.sh/pkg/parse:go_default_library",
        "//vendor/src.elv.sh/pkg/prog:go_default_library",
        "//vendor/src.elv.sh/pkg/store:go_default_library",
        "//vendor/src.elv.sh/pkg/strutil:go_default_library",
        "//vendor/src.elv.sh/pkg/ui:go_default_library",
        "//vendor/src.elv.sh/pkg/wcwidth:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:aix": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:illumos": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:js": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//vendor/src.elv.sh/pkg/sys:go_default_library",
        ],
        "//conditions:default": [],
    }),
)
