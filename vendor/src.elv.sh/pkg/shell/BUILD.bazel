load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "interact.go",
        "paths.go",
        "paths_unix.go",
        "paths_windows.go",
        "script.go",
        "shell.go",
        "signal_unix.go",
        "signal_windows.go",
    ],
    importmap = "k0s.io/vendor/src.elv.sh/pkg/shell",
    importpath = "src.elv.sh/pkg/shell",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/src.elv.sh/pkg/cli:go_default_library",
        "//vendor/src.elv.sh/pkg/cli/term:go_default_library",
        "//vendor/src.elv.sh/pkg/daemon/daemondefs:go_default_library",
        "//vendor/src.elv.sh/pkg/diag:go_default_library",
        "//vendor/src.elv.sh/pkg/edit:go_default_library",
        "//vendor/src.elv.sh/pkg/env:go_default_library",
        "//vendor/src.elv.sh/pkg/eval:go_default_library",
        "//vendor/src.elv.sh/pkg/fsutil:go_default_library",
        "//vendor/src.elv.sh/pkg/logutil:go_default_library",
        "//vendor/src.elv.sh/pkg/mods:go_default_library",
        "//vendor/src.elv.sh/pkg/mods/daemon:go_default_library",
        "//vendor/src.elv.sh/pkg/mods/store:go_default_library",
        "//vendor/src.elv.sh/pkg/parse:go_default_library",
        "//vendor/src.elv.sh/pkg/prog:go_default_library",
        "//vendor/src.elv.sh/pkg/strutil:go_default_library",
        "//vendor/src.elv.sh/pkg/sys:go_default_library",
        "//vendor/src.elv.sh/pkg/ui:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:windows": [
            "//vendor/golang.org/x/sys/windows:go_default_library",
        ],
        "//conditions:default": [],
    }),
)
