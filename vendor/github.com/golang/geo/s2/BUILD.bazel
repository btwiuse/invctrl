load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "bits_go18.go",
        "bits_go19.go",
        "cap.go",
        "cell.go",
        "cellid.go",
        "cellunion.go",
        "centroids.go",
        "contains_point_query.go",
        "contains_vertex_query.go",
        "convex_hull_query.go",
        "crossing_edge_query.go",
        "distance_target.go",
        "doc.go",
        "edge_clipping.go",
        "edge_crosser.go",
        "edge_crossings.go",
        "edge_distances.go",
        "edge_query.go",
        "edge_tessellator.go",
        "encode.go",
        "interleave.go",
        "latlng.go",
        "lexicon.go",
        "loop.go",
        "matrix3x3.go",
        "max_distance_targets.go",
        "metric.go",
        "min_distance_targets.go",
        "nthderivative.go",
        "paddedcell.go",
        "point.go",
        "point_measures.go",
        "point_vector.go",
        "pointcompression.go",
        "polygon.go",
        "polyline.go",
        "polyline_measures.go",
        "predicates.go",
        "projections.go",
        "query_options.go",
        "rect.go",
        "rect_bounder.go",
        "region.go",
        "regioncoverer.go",
        "shape.go",
        "shapeindex.go",
        "shapeutil.go",
        "shapeutil_edge_iterator.go",
        "stuv.go",
        "util.go",
        "wedge_relations.go",
    ],
    importmap = "k0s.io/vendor/github.com/golang/geo/s2",
    importpath = "github.com/golang/geo/s2",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/geo/r1:go_default_library",
        "//vendor/github.com/golang/geo/r2:go_default_library",
        "//vendor/github.com/golang/geo/r3:go_default_library",
        "//vendor/github.com/golang/geo/s1:go_default_library",
    ],
)
