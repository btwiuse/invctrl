load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "builder.go",
        "certificatesigningrequest.go",
        "configmap.go",
        "cronjob.go",
        "daemonset.go",
        "deployment.go",
        "endpoint.go",
        "horizontalpodautoscaler.go",
        "ingress.go",
        "job.go",
        "lease.go",
        "limitrange.go",
        "mutatingwebhookconfiguration.go",
        "namespace.go",
        "networkpolicy.go",
        "node.go",
        "persistentvolume.go",
        "persistentvolumeclaim.go",
        "pod.go",
        "poddisruptionbudget.go",
        "replicaset.go",
        "replicationcontroller.go",
        "resourcequota.go",
        "secret.go",
        "service.go",
        "statefulset.go",
        "storageclass.go",
        "testutils.go",
        "utils.go",
        "validatingwebhookconfiguration.go",
        "verticalpodautoscaler.go",
        "volumeattachment.go",
    ],
    importmap = "k0s.io/vendor/k8s.io/kube-state-metrics/v2/external/store",
    importpath = "k8s.io/kube-state-metrics/v2/external/store",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/pkg/errors:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/robfig/cron/v3:go_default_library",
        "//vendor/k8s.io/api/admissionregistration/v1:go_default_library",
        "//vendor/k8s.io/api/apps/v1:go_default_library",
        "//vendor/k8s.io/api/autoscaling/v2beta1:go_default_library",
        "//vendor/k8s.io/api/batch/v1:go_default_library",
        "//vendor/k8s.io/api/batch/v1beta1:go_default_library",
        "//vendor/k8s.io/api/certificates/v1:go_default_library",
        "//vendor/k8s.io/api/coordination/v1:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/api/networking/v1:go_default_library",
        "//vendor/k8s.io/api/policy/v1beta1:go_default_library",
        "//vendor/k8s.io/api/storage/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/intstr:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/validation:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/watch:go_default_library",
        "//vendor/k8s.io/autoscaler/vertical-pod-autoscaler/pkg/apis/autoscaling.k8s.io/v1beta2:go_default_library",
        "//vendor/k8s.io/autoscaler/vertical-pod-autoscaler/pkg/client/clientset/versioned:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/tools/cache:go_default_library",
        "//vendor/k8s.io/klog/v2:go_default_library",
        "//vendor/k8s.io/kube-state-metrics/v2/pkg/builder/types:go_default_library",
        "//vendor/k8s.io/kube-state-metrics/v2/pkg/constant:go_default_library",
        "//vendor/k8s.io/kube-state-metrics/v2/pkg/listwatch:go_default_library",
        "//vendor/k8s.io/kube-state-metrics/v2/pkg/metric:go_default_library",
        "//vendor/k8s.io/kube-state-metrics/v2/pkg/metric_generator:go_default_library",
        "//vendor/k8s.io/kube-state-metrics/v2/pkg/metrics_store:go_default_library",
        "//vendor/k8s.io/kube-state-metrics/v2/pkg/options:go_default_library",
        "//vendor/k8s.io/kube-state-metrics/v2/pkg/sharding:go_default_library",
        "//vendor/k8s.io/kube-state-metrics/v2/pkg/watch:go_default_library",
    ],
)
